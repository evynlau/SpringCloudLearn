server:
  port: 8000
spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建了路由的功能，利用微服务名称进行路由
      routes:
        - id: payment_routh   #路由的id
          uri: lb://payment-hystrix-service
          #          uri: http://localhost:8021
          predicates:
            - Path=/api/v1/payment/hs/ok/**
        - id: payment_routh2
          uri: lb://payment-hystrix-service
          #          uri: http://localhost:8021
          predicates:
            - Path=/api/v1/payment/cb/**
#            #After 路由断言只有一个ZonedDateTime生成的datetime参数，只有在这个事件之后的请求才能匹配上
#            - After=2021-09-01T17:42:47.789-07:00[Asia/Shanghai]
#            #Before 同样是一个时间断言，只不过是在配置的时间之前有效，过时之后失效。
#            - Before=2021-09-01T17:42:47.789-07:00[Asia/Shanghai]
#            #Between 路由断言，时间类断言，在声明的时间内有效。并且第二个时间必须大于第一个时间。
#            - Between=2021-09-01T17:42:47.789-07:00[Asia/Shanghai], 2021-09-30T17:42:47.789-07:00[Asia/Shanghai]
#            #Cookie 断言有两个参数，一个cookie 名称和一个java 正则表达式，这个断言匹配给定的cookie 名和值正则匹配的请求。
#            - Cookie=chocolate, ch.p
#            #Header断言有两个参数，一个参数名，一个正则。只有当有这个参数并且值匹配正则的时候才能执行下去。
#            - Header=X-Request-Id, \d+
#            #Host 路由断言接受一个正则域名列表，正则是用英文句号分割的Ant-Style(ant 风格？)正则表达式。
#            - Host=**.somehost.org,**.anotherhost.org
#            #Method路由断言匹配一个或多个Http请求方式（GET POST PUT DELETE HEAD）.
#            - Method=GET,POST
#            #Path路由断言接受两个参数：Spring PathMatcher 正则列表和一个名为 matchOptionalTrailingSeparator 的可选标志。
#            #     这里的segment可通过以下代码获取
#            #     Map<String, String> uriVariables = ServerWebExchangeUtils.getPathPredicateVariables(exchange);
#            #     String segment = uriVariables.get("segment");
#            - Path=/red/{segment},/blue/{segment}
#            #Query路由断言有两个参数: 一个必传参数 and 和一个可选的正则表达式。
#            - Query=red, gree.
#            #RemoteAddr路由断言接受一个来源地址的list，由IPv4或者IPv6组成，比如：192.168.0.1/16（其中192.168.0.1是IP地址，16是子网掩码）
#            - RemoteAddr=192.168.1.1/24
#        #Weight权重路由断言接受两个参数：group分组和Weight权重。权重是按组计算的。
#        - id: weight_high
#          uri: https://weighthigh.org
#          predicates:
#            - Weight=group1, 8
#        - id: weight_low
#          uri: https://weightlow.org
#          predicates:
#            - Weight=group1, 2
#      #filter参照官网给出示例 https://docs.spring.io/spring-cloud-gateway/docs/2.2.5.RELEASE/reference/html/#gatewayfilter-factories
#      filters:
#        - AddRequestHeader=X-Request-red, blue

eureka:
  instance:
    hostname: cloud-gateway-service
  client:
    service-url:
      register-with-eureka: true
      fetch-registry: true
      defaultZone: http://localhost:8761/eureka